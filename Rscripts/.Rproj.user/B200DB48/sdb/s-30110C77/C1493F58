{
    "collab_server" : "",
    "contents" : "#'This script is going to reshape our sample observations into a dataframe that will allow us to look at redundant samples versus time.\n#'(and hopefuly fit a glm model to that dataframe).\n\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(lme4)\nlibrary(doBy)\nlibrary(ggplot2)\n\n#' read in sampobs from DataExploration.R\nsampobs<-read.csv(\"../data/samps1.csv\")\n\n#' Create dataframe of interest\ntest2<-summaryBy(Sample~Individual+Period+site, FUN=length, data=sampobs)\nfirstcap<-summaryBy(Period~Individual, FUN=min,data=test2)\nbehav.obs<-test2 %>% left_join(firstcap)\nbehav.obs$firstcap<-I(behav.obs$Period==behav.obs$Period.min)\nbehav.obs$Period<-as.factor(behav.obs$Period)\n\n#' Fit glmm model\nmod<-glmer(Sample.length~Period+firstcap+(1|Individual), data=behav.obs, family=poisson())\nsummary(mod)\n\n#' Not what I hoped...in terms of firstcap, but it does appear that the there were fewer captures\n#' for the later sampling periods (which would have a similar effect - i.e., fewer recaptures\n#' if the data were sampled randomly)... \n#' \n#' Lets look at when the first captures occurred by period & also overall # samples by period\n#' - Most first captures occured during period 1, 2, or 3.\ntable(firstcap$Period.min) # distribution of first captures (which period?)\n\n#' What about total number of captures by period\ntable(sampobs$Period)\n\n#' Now, number of unique bears in each sampling period\nubears<-summaryBy(Individual~Period, FUN=function(x){length(unique(x))}, data=behav.obs)\n\n\n#' So, the first sampling period has the most first time captures, but the fewest overall\n#'  number of hair samples. \nplot(1:6, as.numeric(table(firstcap$Period.min)/sum(table(firstcap$Period.min))), lty=1, ylim=c(0,0.5), \n     xlab=\"Period\", ylab=\"Proportion\", type=\"l\")\n\nlines(1:6, table(sampobs$Period)/sum(table(sampobs$Period)), lty=2) \n#lines(1:6, ubears[,2]/sum(ubears[,2]), col=\"blue\")\nlegend(2, 0.5, lty=c(1,2), bty=\"n\", \n       legend=c(\"Distribution of First Captures\", \"Distribution of Samples\"))\n\n\n#' Nick's code\ntest2<-as.data.frame(tally(site~Period + Individual, data=melt(sampobs, id.vars = c(\"Individual\",\"site\",\"Period\"))[1:3]))\ntest2$Freq<-test2$Freq/11 #They're all off by a factor of 11...?\ncolnames(test2)[4]<-\"nsamps\"\ntest2<-test2[test2$nsamps>0,]\n\ntest3<-melt(test2, id.vars = c(\"Individual\", \"Period\"))[1:2]\ntest3<-test3[!duplicated(test3),]\ntest3<-mutate(test3, firstCap = !duplicated(Individual))\n\n#' Here it is, John\nbehav.obs<-test2 %>% left_join(test3)\n",
    "created" : 1461894716023.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3396394474",
    "id" : "C1493F58",
    "lastKnownWriteTime" : 1461897407,
    "last_content_update" : 1461897407020,
    "path" : "C:/Users/jfieberg/Google Drive/spatialMR/Rscripts/Redundancy.R",
    "project_path" : "Redundancy.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}