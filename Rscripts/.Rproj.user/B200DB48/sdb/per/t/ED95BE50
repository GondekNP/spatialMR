{
    "contents" : "#' # Initial SECR models \n#'\n \n#+ echo=FALSE \n # wd <- ifelse(basename(getwd())==\"Rscripts\", \n#               gsub(\"/Rscripts\", \"\", getwd()),\n #              getwd())\n#  opts_knit$set(root.dir=wd,comment=NA, fig.height=8, fig.width=12)\n  opts_knit$set(comment=NA, fig.height=8, fig.width=12, cache=TRUE)\n  rm(list = ls()) # clear out memory\n  \n#' Load libraries\n#+ warning=FALSE, message=FALSE \n   library(dplyr) # for data manipulation\n   library(secr) \n   library(secrdesign)\n   library(scrbook)\n   library(ggplot2)\n   options(width=160)\n\n#' ## Initial data explorations\n\n#' Lets look at the trapping grid.   \n#'   \n  trap.gr<-read.csv(\"../data/detectorfileScaled.csv\", header=FALSE)\n  names(trap.gr)<-c(\"Trap\", \"X\", \"Y\")\n  plot(trap.gr$X, trap.gr$Y, main=\"Trap Grid\", xlab=\"X\", ylab=\"Y\") \n   \n   \n#' Read in data created using \"Data Exploration.R\" file, names(bearCH)<-c(\"Session\", \"ID\", \"Occasion\", \"Detector\", \"Count\", \"Sex\")\n  bearCH<-read.capthist(\"../data/BearCH.csv\", \"../data/detectorfileScaled.csv\",  detector= 'proximity', covnames=\"Sex\")\n  \n#' Try plotting method from scrbook package \n  enc<-read.csv(\"../data/BearCH.csv\", header=F) # Encounter data\n  enc[,1]<-as.numeric(1) # Treat individuals and periods as factor variables\n  enc[,2]<-as.numeric(enc[,2])\n  traps<-read.csv(\"../data/detectorfileScaled.csv\", header=FALSE) # Trap data\n  traps.3d<-cbind(traps, matrix(1, nrow(traps),6))  # add columns to say when traps were active\n  y3d<-SCR23darray(enc[,1:4], traps.3d) # Create 3d array from capture history\n  spiderplot(y3d, traps[,2:3]) # plot centroids along with recpatures for each individual\n  \n\n#' ### Summary of the data provided by SECR\n#' \n#' - n = number of individuals detected on each occasion\n#' - u = number of individuals detected for the first time on each occasion\n#' - f =  number of individuals detected exactly f times\n#' - M(t+1) =  cumulative number of individuals detected\n#' - losses\t= number of individuals reported as not released on each occasion\n#' - detections\t= number of detections, including within-occasion `recaptures'\n#' - detectors visited = number of detectors at which at least one detection was recorded\n#' - detectors used =  number of detectors, excluding any `not set' in usage attribute of traps attribute\n  summary(bearCH)\n  str(bearCH)\n  \n#' ## Models \n#'   \n#'  First, explore the effect of scaling the trapping grid coordinates\n#'  \n#'  - Model detection as a function of period, movement as function of sex\n#'  - Compare models fit using scaled and unscaled grid\n#'     \n#' Model detection as a function of capture Period and movement as a function of sex of the animal.\n#'  Buffer if scaled = 10, if unscaled = 10*10000 = 10,000\n  secr0 <- secr.fit(bearCH, model =list(g0~t, sigma~Sex), buffer = 10, trace = FALSE, CL=TRUE) # null model\n  plot(secr0$mask)\n  plot(bearCH, tracks=T, add=T)\n\n#' Calculate density estimate (a derived parameter)\n  ds<-derived(secr0)\n  \n#' What if we use the unscaled and uncentered trap locations?\n bearCH.us<-read.capthist(\"../data/BearCH.csv\", \"../data/detectorfileUnScaled.csv\",  detector= 'proximity', covnames=\"Sex\")\n summary(bearCH.us)\n secr0.US <- secr.fit(bearCH.us, model =list(g0~t, sigma~Sex), buffer = 10000, trace = FALSE, CL=TRUE) # null model\n dUS<-derived(secr0.US)\n  \n#' Compare density estimates (just different scales)  \n dUS # unscaled\n ds  # scaled\n  \n#'  Now, N in the region (these depend critically on the size of the buffer!).  Early on, I used a buffer size of 10 (for scaled) and a buffer\n#'  size of 50,000 for the unscaled. The latter buffer was much bigger (proporationally) and resulted in a much bigger N! Here, buffers are similar\n#'  and there is little to no difference between the estimates.\n  region.N(secr0)\n  region.N(secr0.US)\n  \n \n#' Before moving forward, lets check the buffer = 10\n  mask.check(secr0) #looks OK\n\n#' ## Additional Models\n#' \n#' In all of these models, I will assume sigma~sex (males move more than females)\n#' \n#' - g0 ~ T (time trend in detection probabilities)\n#' - g0 ~ b (behavioral response following initial detection)\n#' - g0 ~ b + t (time specific detections & behavioral response)\n#' - g0 ~ b + T (time trend and behavioral response)\n#'\n#'\n\n\n#' #### Time trend in detection  \n  secr1 <- secr.fit(bearCH, model =list(g0~T, sigma~Sex), buffer = 10, trace = FALSE, CL=TRUE) # null model\n  (d1<-derived(secr1))\n  \n#' #### Behavioral response  \n  secr2 <- secr.fit(bearCH, model =list(g0~b, sigma~Sex), buffer = 10, trace = FALSE, CL=TRUE) # null model\n  (d2<-derived(secr2))\n  \n#' #### Time specific detection and behavioral response  \n  secr3 <- secr.fit(bearCH, model =list(g0~b+t, sigma~Sex), buffer = 10, trace = FALSE, CL=TRUE) # null model\n  (d3<-derived(secr3))\n  \n#' #### Time trend and behavioral response\n  secr4 <- secr.fit(bearCH, model =list(g0~b+T, sigma~Sex), buffer = 10, trace = FALSE, CL=TRUE) # null model\n  (d4<-derived(secr4))\n\n#' Compare models using AIC  \n  AIC(secr0, secr1, secr2, secr3, secr4)\n\n#' ## Parameter estimates  \n#' \n#' #### Time specific detection \n  secr0\n  \n#' #### Time trend in detection  \n  secr1\n  \n#' #### Behavioral response    \n  secr2\n  \n#' #### Time specific detection and behavioral response  \n  secr3\n  \n\n#' #### Time trend and behavioral response\n   secr4\n  \n \n#' ## Density estimates\n#'   \n#' Convert density esitmate to N/sq mile.  As reported on the help page for secr.fit:\n#' \n#' - Density for the unscaled analysis is reported in terms of animals/ha (with distances measured in m). So...\n#' - For the scaled analysis, density will be reported in terms of animals/(1000x1000)ha (with distances measured \n#' in terms of km).  \n#' \n#' There are 3861.022 square miles in 1000x1000 ha.  To convert, we use:\n#' \n#' D (per 100 $mi^2$) = (N/ha)*(1000ha/3.861022 mi^2)*100  \n#' \n desnconv<-function(x){\n   100*x/3861.022\n   }\n  desnconv(ds[2,c(1,3,4)]) # point estimate anbd 95% CU **time varying detection model**\n  desnconv(d1[2,c(1,3,4)]) # point estimate anbd 95% CU **trend in detection model**\n  desnconv(d2[2,c(1,3,4)]) # point estimate anbd 95% CU **Behav response**\n  desnconv(d3[2,c(1,3,4)]) # point estimate anbd 95% CU **Time specific detection and behavioral response**\n  desnconv(d4[2,c(1,3,4)]) # point estimate anbd 95% CU **Time trend and behavioral response**\n  \n  \n#' #### Calculate detection functions for the go~t, sigma~sex model\n#' \n  x<-seq(0,5, length=100)\n  lx<-length(x)\n  bet<-secr0$fit$par\n  g0s<-plogis(rep(bet[1],6)+c(0,bet[2:6]))\n  sigs<-c(exp(bet[7]), exp(bet[7]+bet[8]))\n  phat<-NULL\n  for(i in 1:6){\n    pfemale<-g0s[i]*exp(-x^2/(2*sigs[1]))\n    pmale<-g0s[i]*exp(-x^2/(2*sigs[2]))\n    phat<-rbind(phat, data.frame(x=rep(x,2),sex=rep(c(\"F\",\"M\"),each=lx), p=c(pfemale, pmale), period=as.factor(rep(i,each=2*lx))))  \n  }\n  \n#' Plot fitted detection functions.  Looks like the \"time effect\" is much bigger than then sex effect. \n  ggplot(phat, aes(x, p, shape=sex, colour=period)) +geom_line()+facet_wrap(~sex)+xlab(\"Distance from HR center (km)\")+ ylab(\"Detection Probability\")\n    \n  \n#' Some functions to look at\n#' - reduce\n#' - RMarkInput (to allow fitting of traditional M-R models in Program Mark, but from R)\n#' - write.DA \n#' - write.SPACECAP (to allow Bayesian fitting)\n#'  \n#' Could also try:\n#' \n#'  - Other detection functions (exponential, etc)\n#'  - Resource selection map\n#'  - SPACECAP/JAGS models   \n#'  - Fit of models to data pooled across sessions (counts of individuals across occassions)\n#'  - Fit of models using count data at each session  \n  \n#'\n#'  For how to deal with \"non-habitat\" in JAGS, see: http://www.mikemeredith.net/blog/1309_SECR_in_JAGS_patchy_habitat.htm#fold  \n  ",
    "created" : 1435949132612.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1875345399",
    "id" : "ED95BE50",
    "lastKnownWriteTime" : 1439148754,
    "path" : "C:/Users/jfieberg/Google Drive/spatialMR/Rscripts/SecrAll1.R",
    "project_path" : "SecrAll1.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}