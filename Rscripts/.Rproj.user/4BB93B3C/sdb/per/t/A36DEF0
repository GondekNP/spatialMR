{
    "contents" : "#' ## Data Cleaning/Data Development\n#' \n#' \n#+ echo=FALSE \n # wd <- ifelse(basename(getwd())==\"Rscripts\", \n#               gsub(\"/Rscripts\", \"\", getwd()),\n #              getwd())\n#  opts_knit$set(root.dir=wd,comment=NA, fig.height=8, fig.width=12)\n  opts_knit$set(comment=NA, fig.height=8, fig.width=12)\n  rm(list = ls()) # clear out memory\n  \n#' Load libraries\n#+ warning=FALSE, message=FALSE \n   library(dplyr) # for data manipulation\n   options(width=160)\n   \n#' Purpose:  to read in raw data from Karen's excel spradsheet, \"Karen's work Copy of g1288 results.xls\", \n#' look at a few data summaries, and check for errors.\n#' \n#' Read in raw data on samples and individuals tab (saved as .csv files)\n  ind<-read.csv(\"../data/Individuals2.csv\")\n  head(ind)\n#  samps<-read.csv(\"../data/samples.csv\")\n#  head(samps)\n  \n  samps<-read.csv(\"../data/samplesCorrected.csv\")\n  head(samps)\n  \n#' Note: on July 23, David sent a file with corrections made to a few observations that were missing period\n#' or had period=\"6?\".  This program uses the corrected \"samples\" tab from that spreadsheet.  This is the \n#' main difference from the DataExploration.R file.\n#'    \n#' Data quality check:  compare number of samples on the \"individuals\" and \"samples\" tabs of Karen's Excel file.  This looks good (the two agree!).\n  no.samps<-table(samps$Individual)\n  dat.no<-data.frame(names(no.samps),no.samps)[,-2]\n  alldat<-merge(ind, dat.no, by.x=\"Individual\", by.y=\"names.no.samps.\", all=TRUE )\n  summary(alldat$Freq- alldat$no_Samples) # Looks good\n\n#' Look at event IDs & Periods. Use strsplit to determine the site associated with each sample \n   events<-unlist(strsplit(as.character(samps$Event.ID), \"-\"))\n   samps$site<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), \"-\"), `[`, 1))\n   samps$cid<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), \"-\"), `[`, 2))\n   table(samps$site)\n  # samps$Per.check<-substr(samps$cid,1,1) # thought might be period, but it is not\n  # table(samps$Per.Check, samps$Period)\n  \n  \n#' Lets look at the variable labeled **Class**.  I'm not sure what all of these categories are, but I will take a guess, below:\n#'\n#' - sample (sent to lab & processed without any problems)?\n#' - xbomb (not sure) are these samples that were difficult to extract DNA from?\n#' - Xinadequate (sent to lab, but sample was not adequate)\n#' - Xmixed (sent to lab, processed, contained a mixture of hair from different individuals)\n#' - Xnotsent (not sent, we'll see why, below)\n#' - Xspecies (sent to lab, processed, but not black bear hair)\n#' - Xsubselect (low priority, ran out of money before could process)\n#'\n#' Number of each type\n  table(samps$Class)\n  \n#' Lets look at a few of these categories.  \n#' \n#' **Xbomb**:  **Individual** is missing for all of the Xbomb observations, and priority is as high as 1. So,\n#' my guess is that an attempt was made to process these samples, but they were problematic in some way.\n  filter(samps, Class==\"Xbomb\")[,c(1:9, 16,18)]  \n   \n#' **Xinadequate**: similar story...not sure how this category differs from **xbomb** though?\n  filter(samps, Class==\"Xinadequate\")[,c(1:9, 16,18)]  \n\n#' **Xmixed**:  similar story...\n  filter(samps, Class==\"Xmixed\")[,c(1:9, 16,18)]  \n\n#' **Xnotsent**:  Looks like these observations correspond to mislabeled / misbundled envelopes.  Only 4 of these. \n  filter(samps, Class==\"Xnotsent\")[,c(1:9, 16,18)]  \n   \n#' **Xspecies**:  hair likely from different species\n  filter(samps, Class==\"Xspecies\")[,c(1:9, 16,18)]  \n   \n#' **Xsubselect**:  some of these are high priority (so, not sure why they fell to end of list? maybe they were alternates for other\n#' samples collected at the same site & period?). Show only the first 10 observations.\n  filter(samps, Class==\"Xsubselect\")[1:10,c(1:9, 16)]  \n\n#' ### Subsetting of the data   \n#'\n#' At this point, I think it makes to subset the data, creating 4 separate data sets:\n#' \n#'  1. Samples that were processed without any problems (Class = sample).  \n#'  2. Samples that were sent, but turned out to be problematic (Class = Xbomb, Xinadequate, Xmixed)\n#'  3. Samples that likely did not represent bear hair (Class = Xnotsent, Xspecies)\n#'  4. Samples that were not processed (Xsubselect)\n#'  \n#'  We will focus mostly on [1] going forward, but the other data sets may still prove useful, particularly if /\n#'  when we try to construct a reasonable simulation model.\n  sampobs<-filter(samps, Class==\"sample\")\n  samp.prob<-filter(samps, Class%in%c(\"Xbomb\", \"Xinadequate\", \"Xmixed\"))\n  samp.nobhair<-filter(samps, Class%in%c(\"Xnotsent\", \"Xspecies\"))\n  samp.noprocess<-filter(samps, Class==\"Xsubselect\")\n   \n#' ### Further exploration of Sampled Observations\n#'    \n#' At least 2 observations with Period = \"?6\".  Look at these:\n  filter(sampobs, Period==\"6?\")\n  \n#' Fix these, then turn this variable into a numeric variable\n  sampobs$Period[sampobs$Period==\"6?\"]<-\"6\"\n  \n#' For now, drop observations that are missing Period.  Eventually, however, we will want to reconcile two of these \n#' observations that were highlighted earlier. The remaining 7 of these 9 observations correspond to observations from collared bears. \n  sampobs2<-filter(sampobs, Period!=\"\")\n\n#' Now, turn Period into a numeric variable  \n  sampobs2$Period<-droplevels(sampobs2$Period)  \n  sampobs2$Period<-as.numeric(sampobs2$Period)\n  table(sampobs2$Period)\n  \n#' Drop several of the columns that we will not need. \n  sampobs3<-sampobs2[,c(1:9, 16,18,42:44)] \n\n#' Write this file out for later use\n   write.csv(sampobs3, file=\"../data/samps1.csv\", row.names=FALSE)  ",
    "created" : 1439239302657.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "422363580",
    "id" : "A36DEF0",
    "lastKnownWriteTime" : 1437703201,
    "path" : "C:/Users/jfieberg/Google Drive/spatialMR/Rscripts/Data ExplorationUpdated.R",
    "project_path" : "Data ExplorationUpdated.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}