{
    "collab_server" : "",
    "contents" : "BearHugginsParallel <- function(treatment=\"Sub\"){\n  #' ## Fit Huggins model using RMark\n  #' Load libraries\n  #+ warning=FALSE, message=FALSE \n  library(dplyr) # for data manipulation\n  library(RMark) # for fitting models\n  library(FSA) # for converting between data types\n  options(width=160)\n  \n  #' Set wd to HugginsData so that there arent thousands of mark files\n  setwd(\"../data/HugginsData\") ##not working on parallel comp?\n  \n  #' Read in data created using \"Data Exploration.R\" file  \n  sampobs0<-read.csv(\"../samps1.csv\")\n  \n  #' Choose the filepath corresponding to the treatment\n  if(treatment == \"Size\"){ ##WHY are unique() all 400 length in this csv?\n    #pathin<- \"../SizeData/SubsampleLabID.csv\"\n    #pathout<- \"../SizeData/HuggBearEst.csv\"\n  }\n  if(treatment == \"Sub\"){ \n    pathin<- \"../SubsamplingData/SubsampleLabID.csv\"\n    pathout<- \"../SubsamplingData/HuggBearEst.csv\"\n  }\n  \n  #' Load subsampling csv\n  subsamp<-read.csv(pathin)\n  \nfor (j in 1:nrow(subsamp)){  \n  #' Gender: Sex = 204.25 -> Male, Sex= 250.25 ->Female\n  sampobs0$Sex2<-rep(\"1\",nrow(sampobs0))\n  sampobs0$Sex2[sampobs0$Sex==250.25]<-0  \n  \n  #' Filter obs without a period\n  sampobs0<-filter(sampobs0, Period!=\"\")\n  sampobs<-NULL\n  #' Use the existing subsample from the original data instead of using BearSubSample, so we can\n  #' compare residuals with the exact same datasets\n  \n  sub<-subsamp[j,]\n  for (i in sub){\n    sampobs<-rbind(sampobs, sampobs0[which(sampobs0$Lab.ID == i),])\n  }\n  \n  #' Create a data set that contains a count of the number of times each bear was seen for each period\n  caphist<- sampobs%>%group_by(Individual, Period)%>%\n    summarize(Count= n())\n  \n  #' Convert to Rmark file\n  capMark<-capHistConvert(caphist[,c(1,2)], id=\"Individual\", in.type=\"event\", out.type=\"RMark\")\n  sexid<-unique(select(sampobs, Individual, Sex2))\n  table(sexid$Sex2)\n  capMark2<-merge(capMark, sexid, all=FALSE)  \n  capMark3<-capMark2[,c(2,3)]\n  names(capMark3)[2]<-\"sex\"\n  \n  #' Fit Huggins models (with sex covariate & behavioral response)\n  \n  run.models=function(data)\n  {\n    #\n    # Define parameter models\n    #\n    mod0=list(formula=~c+time+sex, share=TRUE)\n    mod1=list(formula=~time+sex, share=TRUE)\n    mod2=list(formula=~c+time, share=TRUE)\n    mod3=list(formula=~time, share=TRUE)\n    mod4=list(formula=~c, share=TRUE)  \n    \n    # Run assortment of models\n    #\n    #\n    # Capture Closed models\n    #\n    # time + sex\n    m0<-mark(data,model=\"Huggins\",model.parameters=list(p=mod0))\n    \n    # Time trend + sex\n    m1<-mark(data,model=\"Huggins\",model.parameters=list(p=mod1))\n    \n    # Behavioral response + sex\n    m2<-mark(data,model=\"Huggins\",model.parameters=list(p=mod2))\n    \n    # time + Behavioral response + sex\n    m3<-mark(data,model=\"Huggins\",model.parameters=list(p=mod3))\n    \n    # Time trend + Behavioral response + sex\n    m4<-mark(data,model=\"Huggins\",model.parameters=list(p=mod4))\n    return(collect.models())\n    \n  }\n\n  \n  \n  #' Pull off N, Se, AICwt and put in table\n  modelsum<-function(models){\n    mnames=models$model.table$model # Names of models\n    names<-names(models) # names of model objects\n    nl<-length(names)-1 # number of models fit\n    sumnames<-paste(deparse(substitute(models)),names[-(nl+1)], \"results\", \"derived\", \"'N Population Size'\", sep=\"$\")\n    SEnames<-paste(sumnames, \"se\", sep=\"$\")\n    Nnames<-paste(sumnames, \"estimate\", sep=\"$\")\n    N<-unlist(sapply(1:nl, FUN=function(x){eval(parse(text=Nnames[x]))}))\n    se<-unlist(sapply(1:nl, FUN=function(x){eval(parse(text=SEnames[x]))}))\n    wt<-models$model.table$weight\n    derived<-data.frame(model=mnames,AIC.wt=wt,N=N,se=se)\n    Nhat<-sum(N*wt)\n    sea<-sqrt(se^2+(N-Nhat)^2)\n    sea<-sum(se*wt)\n    derived\n  }\n  est<-modelsum(run.models(data=capMark3))\n  est<-mutate(est, modelAnalog = c(\"Model A\", \"Model B\", \"Model C\", \"Model D\", \"Model E\"))\n  est<-mutate(est, subNo = j)\n  write.table(est, file=pathout, append = if(j>1){TRUE}else{FALSE}, col.names = if(j>1){FALSE}else{TRUE}, row.names = FALSE, sep = \",\")\n  print(paste(\"Line\", j, \"done!\"))\n  }\n}",
    "created" : 1458832927986.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "925619275",
    "id" : "AB701D97",
    "lastKnownWriteTime" : 1458833365,
    "last_content_update" : 1458833366190,
    "path" : "//mac/Google Drive/spatialMR/Rscripts/BearHugginsParallel.R",
    "project_path" : "BearHugginsParallel.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}