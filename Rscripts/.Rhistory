compiled<-compile.secr.results()
compiled
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-compile.secr.results()
View(compiled)
debug(compile.secr.results)
compiled<-compile.secr.results()
nrow(newSECR$fullsamps)
FullN.notRedun
newLine
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-compile.secr.results()
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-compile.secr.results()
tetSpr
tetSpr$beta.vcv
tetSpr$dframe
tetSpr$design
tetSpr$link
tetSpr$fixed
tetSpr$parindx
tetSpr$realnames
tetSpr$betanames
tetSpr$fit
tetSpr$beta.vcv
logit(.036)
plogit(.036)
plogis(.036)
plogis(-.0005)
plogis(-.005)
plogis(-.027)
tetSpr$link
exp(-.005)
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
compiled<-compile.secr.results()
View(compiled)
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-compile.secr.results()
tetSpr
tetSpr$beta.vcv
.036-.027
plogis(.009)
.036+.027
plogis(.063)
tetSpr$beta.vcv[1,1]
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
tetSpr$beta.vcv[2,1]
tetSpr$beta.vcv[3,1]
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
debug(compile.secr.results)
compiled<-compile.secr.results()
Q
debug(compile.secr.results)
compiled<-compile.secr.results()
SubN.notRedun<-160
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
debug(compile.secr.results)
compiled<-compile.secr.results()
nrow(newSECR$fullsamps)
nrow(newSECR$subsamps)
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-compile.secr.results()
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-compile.secr.results()
View(compiled)
setwd("~/Google Drive/spatialMR/Rscripts/Simulation")
saveRDS(compiled, "secr.sim.resultsOct3.rds")
bwplot(nhat~trial, data=compiled)
library()
library(mosaic)
bwplot(nhat~trial, data=compiled)
bwplot(SubProp.notRedun~trial, data=compiled)
bwplot(nhat~trial, data=compiled)
?strsplit
strsplit("SimpleRandom10001.rds")
strsplit("SimpleRandom10001.rds", split = ",rds")
strsplit("SimpleRandom10001.rds", split = ".rds")
strsplit("SimpleRandom10001.rds", split = "")
strsplit("SimpleRandom10001.rds", split = "")[[1]]
strsplit("SimpleRandom10001.rds", split = "")[[1]][1:10]
strsplit("Spread.one10001.rds", split = "")[[1]][1:10]
paste(strsplit("Spread.one10001.rds", split = "")[[1]][1:10], sep = "", collapse="")
compiled<-mutate(compiled, subtype=paste(strsplit(sim, split = "")[[1]][1:10], sep = "", collapse=""))
subtype<-paste(strsplit(compiled$sim, split = "")[1:10], sep = "", collapse="")
compiled$sim
subtype<-paste(strsplit(compiled$sim, split = ""), sep = "", collapse="")
strsplit(compiled$sim)
strsplit(compiled$sim, split = "")
class(comiplied$sim)
class(compiled$sim)
as.character(compiled$sim)
compiled<-mutate(compiled, subtype=paste(strsplit(as.character(sim), split = "")[[1]][1:10], sep = "", collapse=""))
View(compiled)
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
compiled<-mutate(compiled, subtype=paste(strsplit(as.character(sim), split = "")[1:10], sep = "", collapse=""))
View(compiled)
strsplit(as.character(compiled$sim), split = "")[1:10]
subtype<-paste(strsplit(as.character(compiled$sim), split = "")[][1:10], sep = "", collapse="")
subtype<-strsplit(as.character(compiled$sim), split = "")
subtype
unlist(subtype)[1:3]
unlist(subtype)[1:30]
subtype[1]
subtype[[1]]
ts<-subtype[[1]]
ts[1:10]
ts[(length(ts)-7):(length(ts)-3)]
ts[(length(ts)-7):(length(ts)-4)]
ts[(length(ts)-8):(length(ts)-4)]
split<-strsplit(as.character(compiled$sim), split = "")
simNo<-NULL
subtype<-NULL
for (j in 1:nrow(compiled)){
new<-split[[j]]
subNew <- paste(new[1:10], sep="", collapse="")
simNoNew <- as.numeric(paste(new[(length(new)-8):(length(new)-4)], sep="", collapse=""))
subtype<-c(subtype, subNew)
simNo<- c(simNo, simNoNew)
}
subtype
simNo
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
View(compiled)
which(is.na(compiled$simNo))
compiled[c(7313, 8532)]
compiled[c(7313, 8532),]
compiled[-c(7313, 8532),]
compiled<-compiled[-c(7313, 8532),]
bwplot(nhat~trial|subtype, data=compiled)
bwplot(SubProp.notRedun~trial|subtype, data=compiled)
bwplot(nhat~trial|subtype, data=compiled)
bwplot(SubProp.notRedun~trial|subtype, data=compiled)
bwplot(nhat~trial|subtype, data=compiled)
bwplot(nhat.SE~trial|subtype, data=compiled)
bwplot(SubProp.notRedun~trial|subtype, data=compiled)
bwplot(nhat~trial|subtype, data=compiled)
bwplot(nhat.SE~trial|subtype, data=compiled)
1++
1
bwplot(nhat~trial|subtype, data=compiled)
bwplot(nhat~trial|subtype, data=compiled)
bwplot(SubProp.notRedun~trial|subtype, data=compiled)
nextSim<-filter(compiled, trial=="t4", simNo==1004)
nextSim<-filter(compiled, trial=="t4", simNo==10004)
View(nextSim)
â‰ˆ2<-1
2<-1
nextSim
nextSim[1,]-nextSim[2,]
nextSim[1,2:5]-nextSim[2,2:5]
bwplot(nhat~trial|subtype, data=compiled)
nextSim[1,2:5]-nextSim[2,2:5]
newLine<-nextSim[1,2:5]-nextSim[2,2:5]
colnames(newLine)
paste("d",colnames(newLine))
paste("d",colnames(newLine), sep="")
colnames(newLine)<-paste("d",colnames(newLine), sep="")
newLine
newLine<-nextSim[2,2:5]-nextSim[1,2:5]
colnames(newLine)<-paste("d",colnames(newLine), sep="")
newLine
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
newLine$SimpRand.nhatBias<-nextSim[1,4]-30
newLine$Spread.nhatBias<-nextSim[2,4]-30
newLine
newLine
newSim
nextSim
newLine<-cbind(newLine, nextSim[1,c(10,12,13)])
newLine
newLine<-cbind(newLine, nextSim[1,c(10,11,13)])
newLine
discrep<-NULL
j<-10001
for (u in 1:(nrow(compiled)/2)){ ##to account for number of sims
for (h in c("t1", "t2", "t3", "t4", "t5", "t6"))
nextSim<-filter(compiled, trial==h, simNo==j)
newLine<-nextSim[2,2:5]-nextSim[1,2:5]
colnames(newLine)<-paste("d",colnames(newLine), sep="")
newLine$SimpRand.nhatBias<-nextSim[1,4]-30
newLine$Spread.nhatBias<-nextSim[2,4]-30
newLine<-cbind(newLine, nextSim[1,c(10,11,13)])
discrep<-rbind(discrep, newLine)
j<-j+1
}
View(discrep)
bwplot(SimpRand.nhatBias+Spread.nhatBias~trial,data=discrep)
bwplot(SimpRand.nhatBias~trial,data=discrep)
14610/12
tail(1:1215.4)
#Now we need the discrepancy for each individual simulation
discrep<-NULL
for (h in c("t1", "t2", "t3", "t4", "t5", "t6")){
j<-10001
for (u in 1:(nrow(compiled)/12)){ ##to account for number of sims (2 subtypes * 6 trials)
nextSim<-filter(compiled, trial==h, simNo==j)
newLine<-nextSim[2,2:5]-nextSim[1,2:5]
colnames(newLine)<-paste("d",colnames(newLine), sep="")
newLine$SimpRand.nhatBias<-nextSim[1,4]-30
newLine$Spread.nhatBias<-nextSim[2,4]-30
newLine<-cbind(newLine, nextSim[1,c(10,11,13)])
discrep<-rbind(discrep, newLine)
j<-j+1
}
}
install.packages("ggplot", "plyr")
bwplot(SimpRand.nhatBias+Spread.nhatBias~trial,data=discrep)
bwplot(Spread.nhatBias~trial,data=discrep)
bwplot(SimpRand.nhatBias~trial,data=discrep)
melt(discrep)
bwplot(Spread.nhatBias~trial,data=discrep)
bwplot(Spread.nhatBias~trial,data=discrep,ylim=c(-5,2))
bwplot(SimpRand.nhatBias~trial,data=discrep, ylim=c(-5,2))
bwplot(SimpRand.nhatBias~trial,data=discrep, ylim=c(-5,3))
bwplot(Spread.nhatBias~trial,data=discrep,ylim=c(-6,3))
bwplot(SimpRand.nhatBias~trial,data=discrep, ylim=c(-6,3))
bwplot(Spread.nhatBias~trial,data=discrep,ylim=c(-6,3))
bwplot(SimpRand.nhatBias~trial,data=discrep, ylim=c(-6,3))
bwplot(Spread.nhatBias~trial,data=discrep,ylim=c(-6,3))
bwplot(SimpRand.nhatBias~trial,data=discrep, ylim=c(-6,3))
View(discrep)
bwplot(dSubProp.notRedun~trial, data=discrep)
bwplot(dSubN.notRedun~trial, data=discrep)
bwplot(dSubN.notRedun~trial, data=discrep, ylim=c(-60,60))
bwplot(dSubN.notRedun~trial, data=discrep, ylim=c(-70,70))
source('~/Google Drive/spatialMR/Rscripts/Simulation/SimSummary.R')
spin("SimSummary.R")
library(knitr)
spin("SimSummary.R")
tally(trial~model, data=compiled)
spin("SimSummary.R")
View(nextSim)
View(discrep)
View(compiled)
tally(FullN.notRedun~trial, data=compiled)
library(mosaic)
tally(FullN.notRedun~trial, data=compiled)
mean(FullN.notRedun~trial, data=compiled)
setwd("~/Google Drive/spatialMR/Presentation/Figures")
setwd("~/Google Drive/spatialMR/Presentation")
setwd("~/Google Drive/spatialMR/Presentation")
#' This document will explore possible capture probabilities using different behavioral and IH parameters.
#' Sourcing logit stuff from Spatial.R with some modification for simplicity
behav <- -.7
int.g0<- 1
IH <- 0
sig <- sqrt(3/pi)/1000
captured<-FALSE
g0frame<-data.frame()
xdists<-seq(0,3000, 10)
#'control
logit.g0<- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="control")
g0frame<-rbind(g0frame, new)
#'captured
captured<-TRUE
logit.g0<- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="captured")
g0frame<-rbind(g0frame, new)
#'Extreme IH values
captured<-FALSE
IH<-2.25
logit.g0<- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="IH.hi")
g0frame<-rbind(g0frame, new)
captured<-FALSE
IH<- -2.25
logit.g0 <- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="IH.lo")
g0frame<-rbind(g0frame, new)
#'Extreme low IH plus behav effect
captured<-TRUE
IH<- -2.25
logit.g0 <- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="IH.lo and captured")
g0frame<-rbind(g0frame, new)
ggplot(data=g0frame,
aes(x=xdists, y=g0dists, colour=type)) +
geom_line()
library(LaplacesDemon)
library(ggplot2)
#' This document will explore possible capture probabilities using different behavioral and IH parameters.
#' Sourcing logit stuff from Spatial.R with some modification for simplicity
behav <- -.7
int.g0<- 1
IH <- 0
sig <- sqrt(3/pi)/1000
captured<-FALSE
g0frame<-data.frame()
xdists<-seq(0,3000, 10)
#'control
logit.g0<- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="control")
g0frame<-rbind(g0frame, new)
#'captured
captured<-TRUE
logit.g0<- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="captured")
g0frame<-rbind(g0frame, new)
#'Extreme IH values
captured<-FALSE
IH<-2.25
logit.g0<- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="IH.hi")
g0frame<-rbind(g0frame, new)
captured<-FALSE
IH<- -2.25
logit.g0 <- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="IH.lo")
g0frame<-rbind(g0frame, new)
#'Extreme low IH plus behav effect
captured<-TRUE
IH<- -2.25
logit.g0 <- int.g0 + behav*captured + IH
g0<-plogis(logit.g0)
g0dists <- g0 * dhalfnorm(scale = sig, x = xdists) * 1000
new<-data.frame(xdists, g0dists, type="IH.lo and captured")
g0frame<-rbind(g0frame, new)
ggplot(data=g0frame,
aes(x=xdists, y=g0dists, colour=type)) +
geom_line()
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
bear.setup()
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(j)
}
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(j)
}
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(j)
}
library(secr)
setwd("~/Google Drive/spatialMR/Rscripts/Simulation")
traplocs<-make.grid(nx=6, ny=6, spacing = 800)
traplocs[,3]<-rownames(traplocs)
colnames(traplocs)<-c("x","y","detectorID")
traplocs2<-cbind(traplocs$detectorID, traplocs$x, traplocs$y)
traplocs2<-as.data.frame(traplocs2)
colnames(traplocs2)<-c("Detector", "X", "Y") #Mimicing efford documentation to HOPEFULLY get it to work...
rownames(traplocs2)<-rownames(traplocs)
traplocs<-traplocs2
trapPath<-tempfile(fileext = ".csv")
write.table(x = traplocs, file = trapPath, sep=",", col.names = FALSE, row.names = FALSE) #needed to drop rownames and colnames!
##Genetically identified individuals (instead of 16-34-299 for eg, letters for simplicity)
known<-c(letters, LETTERS, c("Aa", "Bb", "Cc", "Dd", "Ee", "Ff", "Gg","Hh"))[1:30] ##30 known bears
sig<-sqrt(3/pi) / 1000
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(j)
}
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(c(j,Sys.time()))
}
View(t1)
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(c(j,Sys.time()))
}
for (j in 1:1200) {
lens<-data.frame()
t1<- data.frame(trial="t1", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(Sys.time())
print(j)
}
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
View(lens)
for (j in 1:600) {
lens<-data.frame()
t1<- data.frame(trial="t1", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=2, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=2, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(Sys.time())
print(j)
}
sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0))
sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=2, redun=0, stratDensity=0)
for (j in 1:100) {
lens<-data.frame()
t1<- data.frame(trial="t1", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=4, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=4, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=4, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=4, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=4, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=4, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=4, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(Sys.time())
print(j)
}
View(lens)
View(lens)
lens<-data.frame()
for (j in 1:100) {
t1<- data.frame(trial="t1", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=4, redun=0, stratDensity=0)))
t2<- data.frame(trial="t2", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav = -0.7, IH=0, sessions=4, redun=0, stratDensity=0)))
t3<- data.frame(trial="t3", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=4, redun=0, stratDensity=0)))
t4<- data.frame(trial="t4", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=0, sessions=4, redun=1, stratDensity=0)))
t5<- data.frame(trial="t5", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=0, IH=1.25, sessions=4, redun=1, stratDensity=0)))
t6<- data.frame(trial="t6", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=4, redun=1, stratDensity=0)))
t7<- data.frame(trial="t7", n=nrow(sim.bear(known = known, sig = sig, int.g0=1, traplocs=traplocs, behav=-.7, IH=1.25, sessions=4, redun=1, stratDensity=.75)))
lens<-rbind(lens, t1, t2, t3, t4, t5, t6, t7)
print(Sys.time())
print(j)
}
mean(n~trial, data=lens)
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
bear.setup()
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
bear.setup()
filter(compiled, gfgd=="3")
filter(compiled, gfgd==3)
which(compiled$nhat2==3)
bear.setup()
bear.setup()
get.rds.starts()
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
get.rds.starts()
bear.setup()
source('~/Google Drive/spatialMR/Rscripts/Simulation/RescueSpatail.R')
bear.setup()
