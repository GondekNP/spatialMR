head(ind)
samps<-read.csv("samples.csv")
head(samps)
ind<-read.csv("Individuals2.csv")
head(ind)
no.samps<-table(samps$Individual)
no.samps
cbind(name(no.samps),no.samps)
cbind(names(no.samps),no.samps)
cbind(names(no.samps),as.numeric(no.samps))
data.frame(names(no.samps),no.samps)
dat.no<-data.frame(names(no.samps),no.samps)
dat.no
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
dat.no
xo<-order(dat.no$names.no.samps.)
dat.no[xo,]
head(ind)
xoo<-order(ind$individual)
ind[xoo,]
?merge
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
head(alldat)
table(alldat$Sex, alldat$Sex.1)
plot(alldat$Freq, alldat$no_Samples)
abline(0,1)
summary(alldat$Freq- alldat$no_Samples)
samps
head(samps)
table(samps$Priority)
table(samps$Selected)
table(samps$Event.ID
)
?strsplit
strsplit(samps$event)
strsplit(samps$event, split="-")
strsplit(samps$event, "-")
head(samps)
strsplit(samps$Event.ID, "-")
strsplit(samps$Event.ID, "-")
apply(samps$Event.ID, function=(x){strsplit(x,"-")})
apply(samps$Event.ID, FUN=function(x){strsplit(x,"-")})
lapply(samps$Event.ID, FUN=function(x){strsplit(x,"-")})
lapply(1:nrow(samps), FUN=function(x){strsplit(samps$Event.ID[x],"-")})
strsplit(samps$Event.ID[1],"-")
strsplit(samps$Event.ID[1],-)
class(samps$Event.ID)
lapply(1:nrow(samps), FUN=function(x){strsplit(as.character(samps$Event.ID)[x],"-")})
unlist(class(samps$Event.ID))
unlist(lapply(1:nrow(samps), FUN=function(x){strsplit(as.character(samps$Event.ID)[x],"-")}))
strsplit(as.character(samps$Event.ID), "-")
unlist(strsplit(as.character(samps$Event.ID), "-"))
length(unlist(strsplit(as.character(samps$Event.ID), "-")))
nrow(samps)
head(unlist(strsplit(as.character(samps$Event.ID), "-")))
head(samps$Event.ID)
head(samps)
unique(Event.ID)
unique(samps$Event.ID)
unique(as.character(samps$Event.ID))
sort(unique(as.character(samps$Event.ID)))
bid<-sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 1)
bid
as.numeric(bid)
cid<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 2))
cid
table(cid)
table(cid, samps$Period)
table(bid, cid)
head(samps)
length(unique(samps$Event.ID))
6*11
table(samps$Period)
class(samps$Period)
samps[samps$Period=="?6"]<-"6"
table(samps)
table(samps$Period)
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
# Data quality
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
xo<-order(dat.no$names.no.samps.)
dat.no[xo,]
#' Data quality check samples versus individuals
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' At least 2 observations with Period = "?6"
samps$Period[samps$Period=="?6"]<-"6"
table(samps$Period)
samps$Period[samps$Period=="6?"]<-"6"
table(samps$Period)
samps$Period<-as.numeric(samps$Period)
table(samps$Period)
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
# Data quality
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
xo<-order(dat.no$names.no.samps.)
dat.no[xo,]
#' Data quality check samples versus individuals
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' At least 2 observations with Period = "?6".  Fix these, then turn this variable into a numeric variable
samps$Period[samps$Period=="6?"]<-"6"
table(samps$Period)
table(samps$Period, as.numeric(samps$Period)
)
samps$Period==1
factor
samps$Period<-droplevels(samps$Periods)
samps$Period<-droplevel(samps$Periods)
samps$Period<-droplevels(samps$Period)
table(samps$Period)
table(as.numeric(samps$Period))
samps[samps$Period==""]
samps[samps$Period=="",]
samps$Period[samps$Period==""]<-NA
samps$Period<-as.numeric(samps$Period)
table(samps$Period)
samps[samps$Period==NA,]
samps[is.na(samps$Period)==T,]
head(samps[is.na(samps$Period)==T,])
names(samps)
samps<-samps[,1:11]
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
# Data quality
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
xo<-order(dat.no$names.no.samps.)
dat.no[xo,]
#' Data quality check samples versus individuals
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' Work with just first 11 columns
samps<-samps[,1:11]
samps$Period[samps$Period=="6?"]<-"6"
samps$Period<-droplevels(samps$Period)
samps[is.na(samps$Period)==T,]
samps
samps[is.na(samps$Period)==T,]
samps[1:10,]
samps$Period[samps$Period==""]<-NA
samps[is.na(samps$Period)==T,]
7table(bid)
table(bid)
length(unique(bid))
unique(bid)
#' Purpose:  to read in raw data from Karen's excel spradsheet, "Karen's work Copy of g1288 results.xls",
#' look at a few data summaries, and check for errors.
#'
#' Read in raw data on samples and individuals tab (saved as .csv files)
#'
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
#' Data quality check:  compare number of samples on the "individuals" and "samples" tabs of Karen's Excel file
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
names(samps)
samps$Comments
table(bid)
samps$Period[samps$Period=="6?"]<-"6"
samps$Period<-droplevels(samps$Period)
table(samps$Period)
samps$Period[samps$Period==""]<-NA
samps[is.na(samps$Period)==T,]
table(samps$class)
names(samps)
table(samps$class)
table(samps$Class)
library(dplyr)
?filter
select(filter(samps, Class=="Xbomb"))
(filter(samps, Class=="Xbomb"))
filter(samps, Class=="Xbomb")[,c(1:8, 15,17)]
head(filter(samps, Class=="Xbomb")[,c(1:8, 15,17)])
names(samps)
filter(samps, Class=="Xbomb")[,c(1:9, 16,18)]
head(Samps)
head(samps)
filter(samps, Class=="Xinadequate")[,c(1:9, 16,18)]
filter(samps, Class=="Xmixed")[,c(1:9, 16,18)]
filter(samps, Class=="Xnotsent")[,c(1:9, 16,18)]
filter(samps, Class=="Xspecies")[,c(1:9, 16,18)]
filter(samps, Class=="Xsubselect")[,c(1:9, 16,18)]
table(samps$Class)
#'  We will focus mostly on [1] going forward, but the other data sets may still prove useful, particularly if /
#'  when we try to construct a reasonable simulation model.
sampobs<-filter(samps, Class=="sample")
samp.prob<-filter(samps, Class%in%c("Xbomb", "Xinadequate", "Xmixed"))
samp.nobhair<-filter(samps, Class%in%c("Xnotsent", "Xspecies"))
samp.noprocess<-filter(samps, Class=="Xsubselect")
table(sampobs$Class)
table(samp.prob$Class)
table(samp.nobhair$Class)
table(samp.noprocess$Class)
#' Quite a few with missing values
samps$Period[samps$Period==""]<-NA
samps[is.na(samps$Period)==T,]
#' Quite a few with missing values
samps$Period[samps$Period==""]<-NA
samps$Class[is.na(samps$Period)==T]
filter(samps, Period="")[,c(1:9, 16,18)]
samps<-read.csv("samples.csv")
head(samps)
filter(samps, Class=="Xsubselect")[,c(1:9, 16,18)]
filter(samps, Period="")[,c(1:9, 16,18)]
filter(samps, Period=="")[,c(1:9, 16,18)]
(miss.period<-filter(samps, Period=="")[,c(1:9, 16,18)])
write.csv(miss.period, file="MissingPeriod.csv", row.names=FALSE)
sampobs$Period[samps$Period=="6?"]<-"6"
samps$Class[samps$Period=="6?"]
#' ## Data Cleaning/Data Development
#' Load libraries
library(dplyr) # for data manipulation
options(width=160)
#' Purpose:  to read in raw data from Karen's excel spradsheet, "Karen's work Copy of g1288 results.xls",
#' look at a few data summaries, and check for errors.
#'
#' Read in raw data on samples and individuals tab (saved as .csv files)
#'
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
#' Data quality check:  compare number of samples on the "individuals" and "samples" tabs of Karen's Excel file
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' Note, there are several observations that are missing the sample Period.  A few of these appear to be samples
#' of collared bears (so, perhaps these should not have a period & should be dropped).  Many correspond to
#' Class = Xsubselect (not sent to lab).  Two correspond to sampled observations with a Priority, so these
#' probably(?) represent data entry errors
#'
(miss.period<-filter(samps, Period=="")[,c(1:9, 16,18)])
write.csv(miss.period, file="MissingPeriod.csv", row.names=FALSE)
#' Look at the type of sample.  I'm not sure what all of these categories are, but will take a guess, below:
#'
#' - sample (sent to lab & processed without any problems)?
#' - **xbomb (not sure)** any ideas?
#' - Xinadequate (sent to lab, but sample was not adequate)
#' - Xmixed (sent to lab, processed, contained a mixture of hair from different individuals)
#' - **Xnotsent** (not sent, but not sure why - any ideas?)
#' - Xspecies (sent to lab, processed, but not black bear hair?)
#' - Xsubselect (low priority, ran out of money before could process?)
#'
#' Number of each type
table(samps$Class)
#' Lets look at a few of these categories.
#'
#' **Xbomb**:  **Individual** is missing for all of the Xbomb observations, and priority is as high as 1. So,
#' my guess is that an attempt was made to process these samples, but they were problematic in some way.
filter(samps, Class=="Xbomb")[,c(1:9, 16,18)]
#' **Xinadequate**: similar story...
filter(samps, Class=="Xinadequate")[,c(1:9, 16,18)]
#' **Xmixed**:  similar story...
filter(samps, Class=="Xmixed")[,c(1:9, 16,18)]
#' **Xnotsent**:  Looks like these observations correspond to mislabeled / misbundled envelopes.  Only 4 of these.
filter(samps, Class=="Xnotsent")[,c(1:9, 16,18)]
#' **Xspecies**:  hair likely from different species
filter(samps, Class=="Xspecies")[,c(1:9, 16,18)]
#' **Xsubselect**:  some of these are high priority (so, not sure why they fell to end of list?)
filter(samps, Class=="Xsubselect")[,c(1:9, 16,18)]
#' #### Subsetting of data
#'
#' At this point, I think it makes to subset the data to create 4 separate data sets:
#'
#'  1. Samples that were processed without any problems (Class = sample).
#'  2. Samples that were sent, but turned out to be problematic (Class = Xbomb, Xinadequate, Xmixed)
#'  3. Samples that likely did not represent bear hair (Class = Xnotsent, Xspecies)
#'  4. Samples that were not processed (Xsubselect)
#'
#'  We will focus mostly on [1] going forward, but the other data sets may still prove useful, particularly if /
#'  when we try to construct a reasonable simulation model.
sampobs<-filter(samps, Class=="sample")
samp.prob<-filter(samps, Class%in%c("Xbomb", "Xinadequate", "Xmixed"))
samp.nobhair<-filter(samps, Class%in%c("Xnotsent", "Xspecies"))
samp.noprocess<-filter(samps, Class=="Xsubselect")
#' #### Further exploration of Sampled Observations
#'
#' At least 2 observations with Period = "?6".  Fix these, then turn this variable into a numeric variable
sampobs$Period[sampsobs$Period=="6?"]<-"6"
sampobs$Period[sampobs$Period=="6?"]<-"6"
sampobs$Period<-droplevels(sampobs$Period)
table(sampobs$Period)
#' Purpose:  to read in raw data from Karen's excel spradsheet, "Karen's work Copy of g1288 results.xls",
#' look at a few data summaries, and check for errors.
#'
#' Read in raw data on samples and individuals tab (saved as .csv files)
#'
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
#' Data quality check:  compare number of samples on the "individuals" and "samples" tabs of Karen's Excel file
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' Look at event IDs & Periods. Use strsplit to determine the site associated with each sample
events<-unlist(strsplit(as.character(samps$Event.ID), "-"))
samps$site<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 1))
samps$cid<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 2))
table(cid, samps$Period)
names(samps)
ncol(samps)
#' Purpose:  to read in raw data from Karen's excel spradsheet, "Karen's work Copy of g1288 results.xls",
#' look at a few data summaries, and check for errors.
#'
#' Read in raw data on samples and individuals tab (saved as .csv files)
#'
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
#' Data quality check:  compare number of samples on the "individuals" and "samples" tabs of Karen's Excel file
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' Look at event IDs & Periods. Use strsplit to determine the site associated with each sample
events<-unlist(strsplit(as.character(samps$Event.ID), "-"))
samps$site<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 1))
samps$cid<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 2))
samps$Per.check<-substr(samps$cid,1,1)
table(samps$Per.Check, samps$Period)
select(samps,Per.check, Period)
select(samps,cid, Period)
select(samps, Event.ID)
select(samps, Event.ID, Period)
samps[samps$Period=="6?"]
samps$Event.ID[samps$Period=="6?"]
table(cid)
filter(samps, Period=="", LabID%in%c(26, 93, 1031))[,c(1:9, 16,18, 43, 44)])
filter(samps, Period=="", LabID%in%c(26, 93, 1031))[,c(1:9, 16,18, 43, 44)]
names(samps)
filter(samps, Period=="", Lab.ID%in%c(26, 93, 1031))[,c(1:9, 16,18, 43, 44)]
#' ## Data Cleaning/Data Development
#'
#' Set option chunks, etc
#+ echo=FALSE
opts_chunk$set(comment=NA, cache=TRUE, fig.height=8, fig.width=12)
options(width=150)
#' Load libraries
#+ warning=FALSE, message=FALSE
library(dplyr) # for data manipulation
options(width=160)
#' Purpose:  to read in raw data from Karen's excel spradsheet, "Karen's work Copy of g1288 results.xls",
#' look at a few data summaries, and check for errors.
#'
#' Read in raw data on samples and individuals tab (saved as .csv files)
#'
ind<-read.csv("Individuals2.csv")
head(ind)
samps<-read.csv("samples.csv")
head(samps)
#' Data quality check:  compare number of samples on the "individuals" and "samples" tabs of Karen's Excel file
no.samps<-table(samps$Individual)
dat.no<-data.frame(names(no.samps),no.samps)[,-2]
alldat<-merge(ind, dat.no, by.x="Individual", by.y="names.no.samps.", all=TRUE )
summary(alldat$Freq- alldat$no_Samples) # Looks good
#' Look at event IDs & Periods. Use strsplit to determine the site associated with each sample
events<-unlist(strsplit(as.character(samps$Event.ID), "-"))
samps$site<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 1))
samps$cid<-as.numeric(sapply(strsplit(as.character(samps$Event.ID), "-"), `[`, 2))
# samps$Per.check<-substr(samps$cid,1,1) # thought might be period, but it is not
# table(samps$Per.Check, samps$Period)
#' Note, there are several observations that are missing the sample Period.  A few of these appear to be samples
#' of collared bears (so, perhaps these should not have a period & should be dropped).  Many correspond to
#' Class = Xsubselect (not sent to lab).  Two correspond to sampled observations with a Priority, so these
#' probably(?) represent data entry errors
#'
#' I will write these out ot a file for later checking, but also, below are three that should probably be given higher priority
filter(samps, Period=="", Lab.ID%in%c(26, 93, 1031))[,c(1:9, 16,18, 43, 44)]
miss.period<-filter(samps, Period=="")[,c(1:9, 16,18, 43, 44)]
write.csv(miss.period, file="MissingPeriod.csv", row.names=FALSE)
#' Look at the type of sample.  I'm not sure what all of these categories are, but will take a guess, below:
#'
#' - sample (sent to lab & processed without any problems)?
#' - **xbomb (not sure)** any ideas?
#' - Xinadequate (sent to lab, but sample was not adequate)
#' - Xmixed (sent to lab, processed, contained a mixture of hair from different individuals)
#' - **Xnotsent** (not sent, but not sure why - any ideas?)
#' - Xspecies (sent to lab, processed, but not black bear hair?)
#' - Xsubselect (low priority, ran out of money before could process?)
#'
#' Number of each type
table(samps$Class)
#' Lets look at a few of these categories.
#'
#' **Xbomb**:  **Individual** is missing for all of the Xbomb observations, and priority is as high as 1. So,
#' my guess is that an attempt was made to process these samples, but they were problematic in some way.
filter(samps, Class=="Xbomb")[,c(1:9, 16,18)]
#' **Xinadequate**: similar story...
filter(samps, Class=="Xinadequate")[,c(1:9, 16,18)]
#' **Xmixed**:  similar story...
filter(samps, Class=="Xmixed")[,c(1:9, 16,18)]
#' **Xnotsent**:  Looks like these observations correspond to mislabeled / misbundled envelopes.  Only 4 of these.
filter(samps, Class=="Xnotsent")[,c(1:9, 16,18)]
#' **Xspecies**:  hair likely from different species
filter(samps, Class=="Xspecies")[,c(1:9, 16,18)]
#' **Xsubselect**:  some of these are high priority (so, not sure why they fell to end of list?)
filter(samps, Class=="Xsubselect")[,c(1:9, 16,18)]
#' #### Subsetting of data
#'
#' At this point, I think it makes to subset the data to create 4 separate data sets:
#'
#'  1. Samples that were processed without any problems (Class = sample).
#'  2. Samples that were sent, but turned out to be problematic (Class = Xbomb, Xinadequate, Xmixed)
#'  3. Samples that likely did not represent bear hair (Class = Xnotsent, Xspecies)
#'  4. Samples that were not processed (Xsubselect)
#'
#'  We will focus mostly on [1] going forward, but the other data sets may still prove useful, particularly if /
#'  when we try to construct a reasonable simulation model.
sampobs<-filter(samps, Class=="sample")
samp.prob<-filter(samps, Class%in%c("Xbomb", "Xinadequate", "Xmixed"))
samp.nobhair<-filter(samps, Class%in%c("Xnotsent", "Xspecies"))
samp.noprocess<-filter(samps, Class=="Xsubselect")
#' #### Further exploration of Sampled Observations
#'
#' At least 2 observations with Period = "?6".  Fix these, then turn this variable into a numeric variable
sampobs$Period[sampobs$Period=="6?"]<-"6"
sampobs$Period<-droplevels(sampobs$Period)
table(sampobs$Period)
filter(sampobs, Period=="")
#' At least 2 observations with Period = "?6".  Fix these, then turn this variable into a numeric variable
sampobs$Period[sampobs$Period=="6?"]<-"6"
table(sampobs$Period)
#' For now, drop observations that are missing Period.  Eventually, however, we will want to reconcile two of these highlighted earlier.
#' The remaining 7 of correspond to observations from collared bears.
sampobs2<-filter(sampobs, Period!="")
#' Now, turn Period into a numeric variable
sampobs2$Period<-droplevels(sampobs2$Period)
sampobs2$Period<-as.numeric(sampobs2$Period)
table(sampobs2$Period)
#' Drop several of the columns that we will not need.
sampobs3<-sampobs3[,c(1:9, 16,18,43,44)]
sampobs3<-sampobs2[,c(1:9, 16,18,43,44)]
head(sampobs\3)
head(sampobs3)
table(sampobs3$Priority)
write.csv(sampobs3, file="samps1.csv", row.names=FALSE)
library(knitr)
spin("Data Exploration.R")
getwd()
spin("Data Exploration.R")
getwd()
library(knitr)
# wd <- ifelse(basename(getwd())=="Scripts",
#               gsub("/Scripts", "", getwd()),
#               getwd())
#  opts_knit$set(root.dir=wd,comment=NA, fig.height=8, fig.width=12)
#        wd <- ifelse(basename(getwd())=="RScripts",
#               gsub("/Scripts", "", getwd()),
#               getwd())
#  opts_knit$set(root.dir=wd,comment=NA, fig.height=8, fig.width=12)
opts_knit$set(comment=NA, fig.height=8, fig.width=12)
# Spin the Script of interest to create an R markdown file and html file
o<-spin("./RScripts/Data Exploration.R")
ls()
list.files("./Rscripts")
list.files("./Rscripts/")
list.files("../Rscripts/")
o<-spin("../Rscripts/Data Exploration.R")
#' Move files as needed
mfiles<-list.files("../Scripts", "*.csv", recursive=T)
nfiles<-length(mfiles)
for(i in 1:nfiles){
file.rename(paste("../Scripts/",mfiles[i], sep=""), paste("../datat/", mfiles[i], sep=""))
}
mfiles<-list.files("../Rscripts", "*.csv", recursive=T)
nfiles<-length(mfiles)
for(i in 1:nfiles){
file.rename(paste("../Rscripts/",mfiles[i], sep=""), paste("../datat/", mfiles[i], sep=""))
}
mfiles
getwd()
"../Rscripts/",mfiles[i], sep="")
paste*("../Rscripts/",mfiles[i], sep="")
paste("../Rscripts/",mfiles[i], sep="")
paste("", mfiles[i], sep="")
#' Move files as needed
mfiles<-list.files("../Rscripts", "*.csv", recursive=T)
nfiles<-length(mfiles)
for(i in 1:nfiles){
file.rename(paste("../Rscripts/",mfiles[i], sep=""), paste("", mfiles[i], sep=""))
}
# Copy md files to Output directory
mfiles<-list.files("./", "*.md", recursive=T)
nfiles<-length(mfiles)
for(i in 1:nfiles){
file.rename(paste("./",mfiles[i], sep=""), paste("../Output/", mfiles[i], sep=""))
}
# copy html files over to Output directory
mfiles<-list.files("./", "*.html", recursive=T)
nfiles<-length(mfiles)
for(i in 1:nfiles){
file.rename(mfiles[i], paste("../Output/", mfiles[i], sep=""))
}
